本题使用一个数组保存每一行的遍历结果，最后遍历完成时，将奇数行的结果翻转即可得到答案。层次遍历时除了用一个length保存每一层的队列长度，还可用for...range...直接遍历一层，再用记录下的下一层来替换当前队列。当然这种方式和直接for循环没有本质区别。

my code：
func zigzagLevelOrder(root *TreeNode) [][]int {
	if root == nil {
		return [][]int{}
	}

	var res [][]int
	var queue []*TreeNode
	queue = append(queue, root)

	for len(queue) > 0 {
		var level []int
		var next []*TreeNode
		for _, node := range queue {
			/* fmt.Println(len(queue)) */
			level = append(level, node.Val)
			if node.Left != nil {
				next = append(next, node.Left)
			}
			if node.Right != nil {
				next = append(next, node.Right)
			}
		}
		if len(res)%2 == 1 {
			reverse(level)
		}
		res = append(res, level)
		queue = next
	}
	return res

}

func reverse(nums []int) {
	for i := 0; i < len(nums)/2; i++ {
		nums[i], nums[len(nums)-i-1] = nums[len(nums)-i-1], nums[i]
	}
}

求2的幂次方比较特殊，因为在二进制的表示中，一个数只有一位是1，其余全是0，就正好表示他是2的正整数次方。

按位与（&）的作用是当两个数字每一位是1时，结果为1，其余情况都是0。刚好解决了这一问题，做法是将n的二进制与n-1的二进制按位与运算，这样会得到一个去掉了n最低位1的数字，
因为n-1刚好可以将n最低位的1变成0且不影响后面的数字。

所以直接判断得到的数字是不是0即可，因为2的整数次幂只能有一个二进制1.

func isPowerOfTwo(n int) bool {
	return n > 0 && n&(n-1) == 0

}
